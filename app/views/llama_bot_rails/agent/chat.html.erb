<!DOCTYPE html>
<html>
<head>
  <title>LlamaBot Chat</title>
  <style>
    .chat-container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
    .chat-messages {
      height: 400px;
      border: 1px solid #ccc;
      padding: 10px;
      overflow-y: auto;
      margin-bottom: 20px;
    }
    .message {
      margin-bottom: 10px;
      padding: 8px;
      border-radius: 4px;
    }
    .user-message {
      background-color: #e3f2fd;
      margin-left: 20%;
    }
    .bot-message {
      background-color: #f5f5f5;
      margin-right: 20%;
    }
    .input-container {
      display: flex;
      gap: 10px;
    }
    #message-input {
      flex-grow: 1;
      padding: 8px;
    }
    button {
      padding: 8px 16px;
      background-color: #2196f3;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    button:hover {
      background-color: #1976d2;
    }
  </style>
  <%= javascript_include_tag "llama_bot_rails/application" %>
  <%= action_cable_meta_tag %>
</head>
<body>
  <div class="chat-container">
    <h1>LlamaBot Chat</h1>
    <div class="chat-messages" id="chat-messages">
      <!-- Messages will be added here dynamically -->
    </div>
    <div class="input-container">
      <input type="text" id="message-input" placeholder="Type your message...">
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script>
    // Initialize ActionCable connection
    const consumer = LlamaBotRails.cable;
    const subscription = consumer.subscriptions.create('LlamaBotRails::ChatChannel', {
      connected() {
        console.log('Connected to chat channel');
      },
      disconnected() {
        console.log('Disconnected from chat channel');
      },
      received(data) {
        // Handle incoming messages from the server
        addMessage(data.message, 'bot');
      }
    });

    function sendMessage() {
      const input = document.getElementById('message-input');
      const message = input.value.trim();
      
      if (message) {
        // Add user message to chat
        addMessage(message, 'user');
        input.value = '';

        // Send message through ActionCable
        subscription.send({ message: message });
      }
    }

    function addMessage(text, sender) {
      const messagesDiv = document.getElementById('chat-messages');
      const messageDiv = document.createElement('div');
      messageDiv.className = `message ${sender}-message`;
      messageDiv.textContent = text;
      messagesDiv.appendChild(messageDiv);
      messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }

    // Allow sending message with Enter key
    document.getElementById('message-input').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        sendMessage();
      }
    });
  </script>
</body>
</html> 